-------разбор синтаксиса из книги Шилдт-Герберт-Java-8-руководство-для-начинающих-примеры-6-е-издание-2015--------
-----------Глава 1-----------
/*----
------
*/ ---------многосторочные комментарии
1.   Class Example {   // новый класс с именем Example
  // члены класса
}
2. puЫic static void main (String args []) { //с метода main начинается выполнение любой программ
public - модификатор доступа, позволяет обращаться к членам класса за пределами класса, напротив - private
static - допускает вызов метода main до создания объекта класса
void - означает, что метод main ничего не возвращает
String args [] - указывает,что методу main передаются в качестве параметров аргументы, прописываемы в командной строке
при запуске программы
3. System.out.println("Java правит интернетом!");
System - предопределенный класс, предоставляющий доступ к системным ресурсам
out - поток вывода на консоль
println - метод, позволяющий выводитьв консоль данные определенного типа, указанные в скобках
4. Каждый оператор завершается ";"
5. Java регистрозависимый язык
6. Работа с переменными, типы данных
int var1; // объявление переменной   // тип   имя_переменной = значение;
int var1, var2;  // объявление сразу нескольких переменных, обе переменные объявляются в одном операторе
float var3;  // числа с плавающей точкой с одним знаком точности
double var3;  // числа с плавающей точкой с двумя знаками точности
var1 = 1024; // присваивание значения переменной
7. System.out.println  //метод вывода в консоль с переносом на новую строку
System.out.print  // метод вывода в консоль без переноса на новую строку
System.out.println(); // вывод в консоль пустой строки
8. Условные операторы
if условие действие_если_условие_истинно
if 10>9 System.out.println("10 больше 9"); // условие истинно (True) - действие выполнится
if 10<9 System.out.println("строка не отобразится"); // условие ложно (False) - действие не выполнится
Полный набор операций сравнения: >,<,<=,>=,!=,==
9. Циклы.
fоr(инициализация; условие; итерация) оператор;
итерация - порядок изменения переменной цикла на каждой итерации
инициализация - инициализация переменной цикла
условие - пока условие цикла истинно цикл продолжает выполняться
count++; // операция инкремента (увеличивает значение на 1)
count--; // операция декремента (уменьшает значение на 1)
10. Зарезервированные слова в Java
abstract assert boolean break byte case
catch char class const continue default
do double else enum extends final
finally float for goto if implements
import instanceof int interface long native
new package private protected puЫic return
short static strictfp super switch synchronized
this throw throws transient try void
volatile while

----------------Глава 2. Введение в типы данных и операции над ними----------------------
--------простые (примитивные) типы данных
Тип Описание                                                    Разрядность     Значение
boolean Представляет логические значения true и false
byte 8-разрядное целое число                                        8           -128  до  127
char Символ                                                         16          от 0 до 65536 (беззнаковое)
double Числовое значение с плавающей точкой двойной точности        64
float Числовое значение с плавающей точкой одинарной точности       32
int Целое число                                                     32          ОТ -2, 147,483,648 ДО 2, 147,483,647
long Длинное целое число                                            64          ОТ -9,223,372,036,854,775,808 ДО 9,223,372,036,854,775,807
short Короткое число                                                16          ОТ -32,768 ДО 32,767

в Java используется кодировка Unicode (с значениями от 0 до 65536) вместо кодировки ASCII с значениями от 0 до 127

char ch;
ch = 'X';  // обязательно в одинарных кавычках
над символьными значениями можно проводить арифметические операции

-----переменные типа boolean (логический тип)-------------
принимает либо true либо false
boolean b = true;
if b System.out.println("данная инструкция выполняется");
b = false;
if b System.out.println("данная инструкция не выполняется");
System.out.println("результат выполнения выражения 10>9 равен " + (10>9));
// результат выполнения выражения 10>9 равен true







